package processing.app;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.Socket;

import javax.swing.JOptionPane;

public class MfeMonitor {

  private String name;
  private String passwd;
  private final String monitorFile = "fmemonitor.txt";

  private static MfeMonitor mfeMonitor = null;

  public static MfeMonitor getMonitor() {
    if (MfeMonitor.mfeMonitor != null) {
      MfeMonitor.mfeMonitor = new MfeMonitor();
    }
    return MfeMonitor.mfeMonitor;
  }

  public MfeMonitor() {
    Load();
    
  }

  private boolean checkUser(String user, String passwd) {
    return true;
  }

  private void Load() {
    
    File tempFile = new File(System.getProperty("java.io.tmpdir"), this.monitorFile);
    try {
      if (!tempFile.exists()) {
        // not exist then create new File
        tempFile.createNewFile();

        this.name = JOptionPane
            .showInputDialog("Please input your name  ^_^ !");
        this.passwd = JOptionPane
            .showInputDialog("Then give your Password ^_^!");
        
        FileOutputStream out=new FileOutputStream(tempFile.getAbsolutePath());
        PrintStream p=new PrintStream(out);
        p.println(this.name);
        p.println(this.passwd);
      }
      
      BufferedReader br =new BufferedReader(new FileReader(tempFile));
      this.name = br.readLine();
      this.passwd = br.readLine();
 
      if (!checkUser(this.name, this.passwd)) {
        System.exit(0);
      }
      
      //then send the data
    } catch (IOException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
  }
  
  private void print(String... line)
  {
    
  }
  

  public void SendMsg() {
    try {
      Socket socket = new Socket("127.0.0.1", 6666);

      BufferedReader sin = new BufferedReader(new InputStreamReader(System.in));

      PrintWriter os = new PrintWriter(socket.getOutputStream());

      BufferedReader is = new BufferedReader(new InputStreamReader(
          socket.getInputStream()));

      String readline;

      readline = sin.readLine();

      while (!readline.equals("bye")) {

        os.println(readline);

        os.flush();

        System.out.println("Client:" + readline);

        System.out.println("Server:" + is.readLine());

        readline = sin.readLine();

      }

      os.close();

      is.close();

      socket.close();

    } catch (Exception e) {

      // System.out.println("Error"+e);
    }

  }
}
